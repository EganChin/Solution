project(Tree)
#二叉树的遍历
add_executable(BT.tree-traversals "1020 Tree Traversals.cpp")
add_executable(BT.tree-traversals-again "1086 Tree Traversals Again.cpp")
add_executable(BT.tree-invert "1102 Invert a Binary Tree.cpp")
#树的遍历
add_executable(Tree.total-supply "1079 Total Sales of Supply Chain.cpp")
add_executable(Tree.highest-supply "1090 Highest Price in Supply Chain.cpp")
add_executable(Tree.largest-generation "1094 The Largest Generation.cpp")
add_executable(Tree.lowest-supply "1106 Lowest Price in Supply Chain.cpp")
add_executable(Tree.count-leaves "1004 Counting Leaves.cpp")
add_executable(Tree.path-ew "1053 Path of Equal Weight.cpp")
#二叉查找树
add_executable(BST.is "1043 Is it a Binary Search tree.cpp")
add_executable(BST.complete "1064 Complete Binary Search Tree.cpp")
add_executable(BST.build "1099 Build a Binary Search Tree.cpp")
#平衡二叉树
add_executable(AVL.root "1066 Root of AVL Tree.cpp")
